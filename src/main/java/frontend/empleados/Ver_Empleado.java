/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend.empleados;

import conexion_DB.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lguilln
 */
public class Ver_Empleado extends javax.swing.JInternalFrame {

    PreparedStatement ps = null;
      ResultSet rs = null;
    
    /**
     * Creates new form Registrar_Producto
     */
    public Ver_Empleado() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombre = new javax.swing.JLabel();
        clienteNombre = new javax.swing.JTextField();
        lblNit = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        nombre = new javax.swing.JButton();
        buscarCliente1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Lista de Empleados");

        lblNombre.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lblNombre.setText("Nombre:");

        clienteNombre.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        clienteNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clienteNombreActionPerformed(evt);
            }
        });

        lblNit.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lblNit.setText("Codigo:");

        codigo.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N

        nombre.setBackground(new java.awt.Color(102, 255, 0));
        nombre.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        nombre.setText("Buscar");
        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });

        buscarCliente1.setBackground(new java.awt.Color(102, 255, 0));
        buscarCliente1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        buscarCliente1.setText("All");
        buscarCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarCliente1ActionPerformed(evt);
            }
        });

        tablaEmpleados.setBackground(new java.awt.Color(254, 254, 254));
        tablaEmpleados.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        tablaEmpleados.setForeground(new java.awt.Color(1, 1, 1));
        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Código", "Teléfono", "DPI", "NIT", "Correo Electrónico", "Dirección"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaEmpleados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNit, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(lblNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clienteNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(nombre)
                        .addGap(18, 18, 18)
                        .addComponent(buscarCliente1)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clienteNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNombre)
                        .addComponent(nombre)
                        .addComponent(buscarCliente1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNit)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

      public void limpiarCampos(){
        nombre.setText("");
        codigo.setText("");
    }
    
    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        String nombreS = nombre.getText();
        String codigoS = codigo.getText();
        String where = "";
        
        if(!"".equals(nombreS)||!"".equals(codigoS)){
            where = "WHERE Nombre_Empleado = '" + nombreS + "' OR Codigo_Empleado ='" + codigoS + "'";
               }
        try {
            DefaultTableModel model = new DefaultTableModel();
            tablaEmpleados.setModel(model);
            Conexion con = new Conexion();
            Connection c = con.obtenerConexion();
            
            String sql = "SELECT * FROM EMPLEADO " + where ;
            ps = c.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadC = rsMd.getColumnCount();
            
           model.addColumn("Nombre");
            model.addColumn("Código");
            model.addColumn("Teléfono");
            model.addColumn("DPI");
            model.addColumn("NIT");
            model.addColumn("Correo Eléctronico");
            model.addColumn("Dirección");
            
            while(rs.next()){
                
                Object [] filas = new Object[cantidadC];
                for(int i = 0; i< cantidadC; i++){
                  filas[i] = rs.getObject(i + 1);
            }
                model.addRow(filas);                
                limpiarCampos();
            }
        }catch(SQLException ex) {         
        }
    }//GEN-LAST:event_nombreActionPerformed

    private void clienteNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clienteNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clienteNombreActionPerformed

    private void buscarCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarCliente1ActionPerformed
try {
            DefaultTableModel model = new DefaultTableModel();
            tablaEmpleados.setModel(model);
            Conexion con = new Conexion();
            Connection c = con.obtenerConexion();
            
            String sql = "SELECT * FROM EMPLEADO ";
            ps = c.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadC = rsMd.getColumnCount();
            
            model.addColumn("Nombre");
            model.addColumn("Código");
            model.addColumn("Teléfono");
            model.addColumn("DPI");
            model.addColumn("NIT");
            model.addColumn("Correo Eléctronico");
            model.addColumn("Dirección");
            
            while(rs.next()){
                
                Object [] filas = new Object[cantidadC];
                for(int i = 0; i< cantidadC; i++){
                  filas[i] = rs.getObject(i + 1);
            }
                model.addRow(filas); 
                limpiarCampos();
               
            }
        }catch(SQLException ex) {         
        }
    }//GEN-LAST:event_buscarCliente1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarCliente1;
    private javax.swing.JTextField clienteNombre;
    private javax.swing.JTextField codigo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblNit;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JButton nombre;
    private javax.swing.JTable tablaEmpleados;
    // End of variables declaration//GEN-END:variables
}
